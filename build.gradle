// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0-beta02'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    // Android
    androidBuildToolsVersion = "28.0.3"
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28

    kotlinVersion = "1.3.31"

    // Libraries
    coroutinesVersion = "1.2.1"
    gsonVersion = '2.8.5'
    lifecycleVersion = "2.2.0-alpha01"
    koinVersion = "2.0.0-GA6"
    roomVersion = '2.1.0-alpha04'
    navVersion = "2.0.0"
    glideVersion = '4.0.0'
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoKotlinVersion = '2.1.0'
    espressoVersion = '3.1.0'
    mockitoVersion = '2.18.3'
    mockitoAndroidVersion = '2.18.3'
    robolectricVersion = '3.4.2'
    archCompVersion = '2.0.0-alpha1'
    androidRunnerVersion = '1.1.1'
    androidRulesVersion = '1.1.1'
    appCompatVersion = "1.0.2"

    coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    jodaTime = 'net.danlew:android.joda:2.10.1.2'
    okHttpVersion = '3.14.2'
    retrofitVersion = '2.5.0'
    gson = "com.google.code.gson:gson:$gsonVersion"
    lifecycleRuntime = "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    lifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    lifecycleCompiler = "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    timber = "com.jakewharton.timber:timber:4.7.1"
    junit = "junit:junit:$jUnitVersion"
    mockito = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    assertj = "org.assertj:assertj-core:$assertJVersion"
    retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    koinCore = "org.koin:koin-core:$koinVersion"
    koinCoreExt = "org.koin:koin-core-ext:$koinVersion"
    koinAndroid = "org.koin:koin-android:$koinVersion"

    mobileDependencies = [
            koinCore            : koinCore,
            koinCoreExt         : koinCoreExt,
            koinAndroid         : "org.koin:koin-android:$koinVersion",
            koinAndroidScope    : "org.koin:koin-android-scope:$koinVersion",
            koinAndroidViewModel: "org.koin:koin-android-viewmodel:$koinVersion",
            constraintLayout    : "androidx.constraintlayout:constraintlayout:2.0.0-alpha2",
            navigationFragment  : "androidx.navigation:navigation-fragment-ktx:$navVersion",
            navigationUi        : "androidx.navigation:navigation-ui-ktx:$navVersion",
            adapterDelegates    : 'com.hannesdorfmann:adapterdelegates4:4.0.0',
            glide               : "com.github.bumptech.glide:glide:$glideVersion",
            appCompat           : "androidx.appcompat:appcompat:$appCompatVersion",
            coreKtx             : "androidx.core:core-ktx:$appCompatVersion",
            timber              : timber,
            kotlin              : kotlin,
            lifecycleRuntime    : lifecycleRuntime,
            lifecycleExtensions : lifecycleExtensions,
            lifecycleCompiler   : lifecycleCompiler,
            coroutinesCore      : coroutinesCore,
            coroutinesAndroid   : coroutinesAndroid,
            jodaTime            : jodaTime
    ]

    mobileTestDependencies = [
            androidRunner: "androidx.test:runner:$androidRunnerVersion",
            androidRules : "androidx.test:rules:$androidRulesVersion",
            espresso     : "com.android.support.test.espresso:espresso-core:3.1.0",
            mockWebServer: "com.squareup.okhttp3:mockwebserver:$okHttpVersion",
            testExtJunit : "androidx.test.ext:junit:1.0.0",
            junit        : junit,
            retrofit     : retrofit,
            gson         : gson,

    ]

    presentationDependencies = [
            lifecycleViewModel  : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            timber              : timber,
            kotlin              : kotlin,
            koinCore            : koinCore,
            koinCoreExt         : koinCoreExt,
            koinAndroidViewModel: "org.koin:koin-android-viewmodel:$koinVersion",
            espresso            : "com.android.support.test.espresso:espresso-core:3.1.0",
            androidRunner       : "androidx.test:runner:$androidRunnerVersion",
            androidRules        : "androidx.test:rules:$androidRulesVersion",
            lifecycleExtensions : lifecycleExtensions,
            coroutinesCore      : coroutinesCore,
            coroutinesAndroid   : coroutinesAndroid,
            lifecycleRuntime    : lifecycleRuntime,
            lifecycleCompiler   : lifecycleCompiler
    ]

    presentationTestDependencies = [
            junit            : junit,
            mockito          : mockito,
            assertj          : assertj,
            coroutinesCore   : coroutinesCore,
            coroutinesAndroid: coroutinesAndroid,
            koinTest         : "org.koin:koin-test:$koinVersion",
            coroutinesTest   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion",
            robolectric      : "org.robolectric:robolectric:$robolectricVersion",
            archTesting      : "androidx.arch.core:core-testing:$archCompVersion"
    ]

    domainDependencies = [
            coroutinesCore   : coroutinesCore,
            coroutinesAndroid: coroutinesAndroid,
            koinCore         : koinCore,
            koinCoreExt      : koinCoreExt,
            kotlin           : kotlin
    ]

    domainTestDependencies = [
            junit  : junit,
            mockito: mockito,
            assertj: assertj
    ]

    dataDependencies = [
            kotlin           : kotlin,
            koinCore         : koinCore,
            koinCoreExt      : koinCoreExt,
            coroutinesCore   : coroutinesCore,
            coroutinesAndroid: coroutinesAndroid
    ]

    dataTestDependencies = [
            junit  : junit,
            mockito: mockito,
            assertj: assertj
    ]

    remoteDependencies = [
            retrofitCoroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2",
            okHttp                   : "com.squareup.okhttp3:okhttp:$okHttpVersion",
            okHttpLogger             : "com.squareup.okhttp3:logging-interceptor:$okHttpVersion",
            retrofitConverter        : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            retrofit                 : retrofit,
            kotlin                   : kotlin,
            koinCore                 : koinCore,
            koinCoreExt              : koinCoreExt,
            coroutinesCore           : coroutinesCore,
            coroutinesAndroid        : coroutinesAndroid,
            jodaTime                 : jodaTime,
            gson                     : gson,
    ]

    remoteTestDependencies = [
            junit   : junit,
            mockito : mockito,
            assertj : assertj,
            jodaTime: 'joda-time:joda-time:2.10.2'
    ]

    cacheDependencies = [
            roomRuntime      : "androidx.room:room-runtime:${roomVersion}",
            roomCompiler     : "androidx.room:room-compiler:${roomVersion}",
            roomCoroutines   : "androidx.room:room-coroutines:${roomVersion}",
            gson             : gson,
            koinCore         : koinCore,
            koinCoreExt      : koinCoreExt,
            kotlin           : kotlin,
            coroutinesCore   : coroutinesCore,
            coroutinesAndroid: coroutinesAndroid
    ]

    cacheTestDependencies = [
            junit              : junit,
            mockito            : mockito,
            assertj            : assertj,
            robolectric        : "org.robolectric:robolectric:$robolectricVersion",
            roomTesting        : "androidx.room:room-testing:$roomVersion",
            archTesting        : "androidx.arch.core:core-testing:$archCompVersion",
            androidRunner      : "androidx.test:runner:$androidRunnerVersion",
            androidRules       : "androidx.test:rules:$androidRulesVersion",
            lifecycleRuntime   : lifecycleRuntime,
            lifecycleExtensions: lifecycleExtensions,
            lifecycleCompiler  : lifecycleCompiler,
    ]
}
